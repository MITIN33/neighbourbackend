// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using WebApplication1.Data;

namespace NeighborFoodBackend.Migrations
{
    [DbContext(typeof(FoodserviceContext))]
    partial class FoodserviceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FoodService.Models.Apartment", b =>
                {
                    b.Property<string>("apartmentID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("apartmentName");

                    b.HasKey("apartmentID");

                    b.ToTable("Apartments");
                });

            modelBuilder.Entity("FoodService.Models.Flat", b =>
                {
                    b.Property<string>("FlatNumber")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("apartmentID");

                    b.HasKey("FlatNumber");

                    b.HasIndex("apartmentID");

                    b.ToTable("Flats");
                });

            modelBuilder.Entity("FoodService.Models.FoodItem", b =>
                {
                    b.Property<string>("itemID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("itemDesc");

                    b.Property<string>("itemName");

                    b.HasKey("itemID");

                    b.ToTable("FoodItems");
                });

            modelBuilder.Entity("FoodService.Models.Order", b =>
                {
                    b.Property<string>("orderID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<string>("orderStatus");

                    b.Property<string>("userPlacedBy");

                    b.Property<string>("userPlacedTo");

                    b.HasKey("orderID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("FoodService.Models.SellerItem", b =>
                {
                    b.Property<string>("SellerItemID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("endTime");

                    b.Property<string>("itemID");

                    b.Property<int>("quantity");

                    b.Property<string>("sellerID");

                    b.Property<int>("servedFor");

                    b.Property<DateTime>("startTime");

                    b.Property<string>("userUid");

                    b.HasKey("SellerItemID");

                    b.HasIndex("itemID");

                    b.HasIndex("userUid");

                    b.ToTable("SellerItems");
                });

            modelBuilder.Entity("FoodService.Models.User", b =>
                {
                    b.Property<string>("userUid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("flatNumber");

                    b.Property<string>("fname");

                    b.Property<string>("lname");

                    b.Property<string>("phoneNo");

                    b.Property<string>("userName");

                    b.HasKey("userUid");

                    b.HasIndex("flatNumber");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FoodService.Models.Flat", b =>
                {
                    b.HasOne("FoodService.Models.Apartment")
                        .WithMany("Flats")
                        .HasForeignKey("apartmentID");
                });

            modelBuilder.Entity("FoodService.Models.FoodItem", b =>
                {
                    b.HasOne("FoodService.Models.Order")
                        .WithMany("foodItem")
                        .HasForeignKey("itemID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FoodService.Models.SellerItem", b =>
                {
                    b.HasOne("FoodService.Models.FoodItem")
                        .WithMany("SellerItems")
                        .HasForeignKey("itemID");

                    b.HasOne("FoodService.Models.User")
                        .WithMany("SellerItems")
                        .HasForeignKey("userUid");
                });

            modelBuilder.Entity("FoodService.Models.User", b =>
                {
                    b.HasOne("FoodService.Models.Flat")
                        .WithMany("Users")
                        .HasForeignKey("flatNumber");
                });
#pragma warning restore 612, 618
        }
    }
}
